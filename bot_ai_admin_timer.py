import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils import executor
import os

# –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
TOKEN = '7807213915:AAEkplZ9d3AXmbX6U11R2GoFPHPhLnspaus'
ADMIN_ID = '–í–ê–®_ID'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID
admins = [ADMIN_ID]

logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"))
keyboard.add(KeyboardButton("ü§ù –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É"))
keyboard.add(KeyboardButton("üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑"))

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    user_id = message.from_user.id
    if user_id in admins:
        admin_button = KeyboardButton("üõ† –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")
        keyboard.add(admin_button)
    
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π:", reply_markup=keyboard)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"
@dp.message_handler(lambda message: message.text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def personal_account(message: types.Message):
    user_id = message.from_user.id
    # –õ–æ–≥–∏–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
    await message.answer("–≠—Ç–æ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç.\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —Å–¥–µ–ª–∫–∞–º–∏.")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É"
@dp.message_handler(lambda message: message.text == "ü§ù –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É")
async def create_deal(message: types.Message):
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏
    await message.answer("–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–¥–µ–ª–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –≤—Å–µ –¥–µ—Ç–∞–ª–∏.")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑"
@dp.message_handler(lambda message: message.text == "üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑")
async def get_prize(message: types.Message):
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ
    prize_link = "https://t.me/virus_play_bot/app?startapp=inviteCodeuNWkBu8PylHXHXLO"
    await message.answer(f"–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑, –ø–µ—Ä–µ–π–¥—è –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: {prize_link}")
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    for admin in admins:
        await bot.send_message(admin, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–∏–∑!")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" (–¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)
@dp.message_handler(lambda message: message.text == "üõ† –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", user_id=admins)
async def admin_panel(message: types.Message):
    # –õ–æ–≥–∏–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    await message.answer("–≠—Ç–æ –≤–∞—à–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.\n\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—É–¥–∞–ª–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤ –∏ —Ç.–¥.)
@dp.message_handler(commands=['add_admin'], user_id=admins)
async def add_admin(message: types.Message):
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    new_admin_id = message.text.split(' ')[1]
    if new_admin_id.isdigit():
        admins.append(new_admin_id)
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin_id} —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")
    else:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

@dp.message_handler(commands=['remove_admin'], user_id=admins)
async def remove_admin(message: types.Message):
    # –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_id_to_remove = message.text.split(' ')[1]
    if admin_id_to_remove in admins:
        admins.remove(admin_id_to_remove)
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {admin_id_to_remove} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
    else:
        await message.answer("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")

@dp.message_handler(commands=['list_admins'], user_id=admins)
async def list_admins(message: types.Message):
    # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_list = "\n".join(admins)
    await message.answer(f"–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n{admin_list}")

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(commands=['add_user'], user_id=admins)
async def add_user(message: types.Message):
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–ø–∏—Å–æ–∫
    new_user_id = message.text.split(' ')[1]
    if new_user_id.isdigit():
        # –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_user_id} –¥–æ–±–∞–≤–ª–µ–Ω!")
    else:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
