import asyncio
from aiogram import Bot, Dispatcher, F, Router, types
from aiogram.enums.parse_mode import ParseMode
from aiogram.types import (
    Message, CallbackQuery,
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart
from datetime import datetime

TOKEN = "7807213915:AAEkplZ9d3AXmbX6U11R2GoFPHPhLnspaus"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
ADMIN_ID = 7620745738
ADMINS = {ADMIN_ID}

bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())
router = Router()
dp.include_router(router)

user_deals = {}

class AdminManagementState(StatesGroup):
    add_admin = State()

def main_menu(user_id: int) -> ReplyKeyboardMarkup:
    buttons = [
        [KeyboardButton(text="ü§ù –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É")],
        [KeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑")],
        [KeyboardButton(text="üì¨ –û—Ç–∑—ã–≤—ã")],
        [KeyboardButton(text="üõ° –ì–¥–µ —è –≥–∞—Ä–∞–Ω—Ç?")],
        [KeyboardButton(text="üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
        [KeyboardButton(text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")]
    ]
    if user_id in ADMINS:
        buttons.append([KeyboardButton(text="üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")])
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def admin_panel_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫")],
            [KeyboardButton(text="üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏")],
            [KeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")]
        ], resize_keyboard=True
    )

def is_admin(user_id: int) -> bool:
    return user_id in ADMINS

@router.message(CommandStart())
async def start_handler(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ", reply_markup=main_menu(message.from_user.id))

@router.message(F.text == "ü§ù –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É")
async def create_deal_handler(message: Message):
    user_id = message.from_user.id
    user_deals[user_id] = datetime.now()
    cancel_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É", callback_data="cancel_deal")]
    ])
    await message.answer("‚úçÔ∏è –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–¥–µ–ª–∫—É.", reply_markup=cancel_kb)
    await bot.send_message(ADMIN_ID, f"üì¨ –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ –æ—Ç <a href='tg://user?id={user_id}'>{user_id}</a>.")
    asyncio.create_task(auto_cancel_deal(user_id))

@router.message(F.text == "üéÅ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–∑")
async def get_prize_handler(message: Message):
    await message.answer(
        "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://t.me/virus_play_bot/app?startapp=inviteCodeuNWkBu8PylHXHXLO",
        reply_markup=main_menu(message.from_user.id)
    )
    await message.answer("–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: @RaindropSpam_bot")

@router.message(F.text == "üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_handler(message: Message):
    if is_admin(message.from_user.id):
        await message.answer("–í—ã –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏", reply_markup=admin_panel_menu())
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")

@router.message(F.text == "üìã –°–ø–∏—Å–æ–∫ —Å–¥–µ–ª–æ–∫")
async def admin_deals_handler(message: Message):
    if is_admin(message.from_user.id):
        deals_list = "\n".join([f"{k}: {v}" for k, v in user_deals.items()]) or "–°–¥–µ–ª–æ–∫ –Ω–µ—Ç"
        await message.answer(f"–°–ø–∏—Å–æ–∫:
{deals_list}", reply_markup=admin_panel_menu())

@router.message(F.text == "üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏")
async def admin_management_handler(message: Message, state: FSMContext):
    if is_admin(message.from_user.id):
        await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞:", reply_markup=admin_panel_menu())
        await state.set_state(AdminManagementState.add_admin)

@router.message(AdminManagementState.add_admin)
async def add_admin(message: Message, state: FSMContext):
    new_admin_id = message.text
    if new_admin_id.isdigit():
        ADMINS.add(int(new_admin_id))
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin_id} –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=admin_panel_menu())
        await state.clear()
    else:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π ID.", reply_markup=admin_panel_menu())

@router.message(F.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
async def back_to_menu(message: Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu(message.from_user.id))

@router.message(F.text == "üì¨ –û—Ç–∑—ã–≤—ã")
async def reviews_handler(message: Message):
    await message.answer("–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ—Ç–∑—ã–≤—ã: https://t.me/raindrop_reviews")

@router.message(F.text == "üõ° –ì–¥–µ —è –≥–∞—Ä–∞–Ω—Ç?")
async def guarantee_handler(message: Message):
    await message.answer(
        "–ß–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —è –≥–∞—Ä–∞–Ω—Ç:\n–ß–∞—Ç 1: https://t.me/naytixa\n–ß–∞—Ç 2: https://t.me/ChatFischS\n–ß–∞—Ç 3: https://t.me/fischtradeschat"
    )

async def auto_cancel_deal(user_id: int):
    await asyncio.sleep(3600)
    if user_id in user_deals:
        del user_deals[user_id]
        await bot.send_message(user_id, "‚ùå –í–∞—à–∞ —Å–¥–µ–ª–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

