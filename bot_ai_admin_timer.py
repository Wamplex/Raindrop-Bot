from aiogram import Bot, Dispatcher, F, types
from aiogram.types import (
    Message, InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from aiogram import Router
import asyncio

TOKEN = 'YOUR_BOT_TOKEN'
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(resize_keyboard=True, keyboard=[
    [KeyboardButton(text="üíº –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É")],
    [KeyboardButton(text="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–∏–∑")],
    [KeyboardButton(text="üõí –¢–æ–≤–∞—Ä—ã")],
    [KeyboardButton(text="‚ûï –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–æ–≤–∞—Ä")]
])

@dp.message(F.text == "/start")
async def start(message: Message):
    text = (
        "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–∫–ª—é—á–µ–Ω–∏—è —Å–¥–µ–ª–æ–∫ —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–∏–∑\n"
        "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n"
        "‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–π —Ç–æ–≤–∞—Ä\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é –Ω–∏–∂–µ."
    )
    await message.answer(text, reply_markup=main_kb)

# üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–∏–∑
@dp.message(F.text == "üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–∏–∑")
async def free_prize(message: Message):
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéâ –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑", url="https://t.me/virus_play_bot/app?startapp=inviteCodeuNWkBu8PylHXHXLO")]
    ])
    await message.answer("–ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=inline_kb)
    await message.answer("–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞: @RaindropSpam_bot")

# üíº –°–¥–µ–ª–∫–∞
@dp.message(F.text == "üíº –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É")
async def create_deal_start(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ @username –≤—Ç–æ—Ä–æ–π —Å—Ç–æ—Ä–æ–Ω—ã —Å–¥–µ–ª–∫–∏:")

    @dp.message()
    async def ask_deal_info(message: Message):
        username = message.text.strip()
        await message.answer(f"–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–¥–µ–ª–∫—É —Å {username}:")

        @dp.message()
        async def final_deal(message: Message):
            deal_text = message.text.strip()
            await message.answer(f"‚úÖ –°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n–û–ø–∏—Å–∞–Ω–∏–µ: {deal_text}")

# üõí –¢–æ–≤–∞—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–∫—É–ø–∫–∏
@dp.message(F.text == "üõí –¢–æ–≤–∞—Ä—ã")
async def show_products(message: Message):
    products = [
        {"name": "Fisch 100 —à—Ç", "price": "50‚ÇΩ"},
        {"name": "Fisch 300 —à—Ç", "price": "130‚ÇΩ"},
        {"name": "Fisch 500 —à—Ç", "price": "200‚ÇΩ"},
        {"name": "BloxFruit –∞–∫–∫–∞—É–Ω—Ç (—Å–≤–µ–∂–∏–π)", "price": "120‚ÇΩ"},
        {"name": "BloxFruit –∞–∫–∫–∞—É–Ω—Ç (–ø—Ä–æ–∫–∞—á–∞–Ω–Ω—ã–π)", "price": "300‚ÇΩ"},
        {"name": "Nitro Discord", "price": "250‚ÇΩ"},
        {"name": "Spotify Premium 3 –º–µ—Å", "price": "90‚ÇΩ"},
        {"name": "YouTube Premium", "price": "70‚ÇΩ"},
    ]

    for product in products:
        button = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–ö—É–ø–∏—Ç—å", callback_data=f"buy:{product['name']}")]
        ])
        await message.answer(f"üîπ <b>{product['name']}</b> ‚Äî <i>{product['price']}</i>", reply_markup=button, parse_mode="HTML")

@dp.callback_query(F.data.startswith("buy:"))
async def handle_purchase(callback: types.CallbackQuery):
    product_name = callback.data.split(":", 1)[1]
    await callback.message.answer(f"üõç –í—ã –≤—ã–±—Ä–∞–ª–∏: <b>{product_name}</b>\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º: @RaindropSpam_bot", parse_mode="HTML")
    await callback.answer()

# ‚ûï –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–æ–≤–∞—Ä
@dp.message(F.text == "‚ûï –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–æ–≤–∞—Ä")
async def suggest_product(message: Message):
    await message.answer("‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:")

    @dp.message()
    async def get_suggestion(msg: Message):
        suggestion = msg.text
        await bot.send_message(chat_id="@RaindropSpam_bot", text=f"üì© –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç @{msg.from_user.username or msg.from_user.id}:\n{suggestion}")
        await msg.answer("‚úÖ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏!")

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
