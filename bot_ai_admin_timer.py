import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.markdown import hbold
from datetime import datetime, timedelta

API_TOKEN = "7807213915:AAGGA7EDq-e_8uUnpKfg4ZhUe-KfJfXKvUY"
ADMIN_ID = 5809260847  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID

bot = Bot(token=API_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

# –°–æ—Å—Ç–æ—è–Ω–∏—è
class Deal(StatesGroup):
    waiting_for_username = State()
    waiting_for_description = State()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="ü§ù –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É", callback_data="create_deal")],
        [InlineKeyboardButton(text="üì© –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")]
    ])

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {hbold(message.from_user.first_name)}!\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard())

# –ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É"
@dp.callback_query(F.data == "create_deal")
async def deal_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–í–≤–µ–¥–∏—Ç–µ username —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–¥–µ–ª–∫–∏:")
    await state.set_state(Deal.waiting_for_username)
    await state.update_data(start_time=datetime.now())
    await callback.answer()

# –ü–æ–ª—É—á–µ–Ω–∏–µ username
@dp.message(Deal.waiting_for_username)
async def deal_username(message: Message, state: FSMContext):
    await state.update_data(username=message.text)
    await message.answer("–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–¥–µ–ª–∫—É:")
    await state.set_state(Deal.waiting_for_description)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏
@dp.message(Deal.waiting_for_description)
async def deal_description(message: Message, state: FSMContext):
    data = await state.get_data()
    username = data["username"]
    description = message.text

    text = f"üíº –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞:\nüë§ –° –∫–µ–º: @{username}\nüìù –û–ø–∏—Å–∞–Ω–∏–µ: {description}"

    await message.answer("–°–¥–µ–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.")
    await bot.send_message(ADMIN_ID, text)
    await state.clear()

# –ü–æ–¥–¥–µ—Ä–∂–∫–∞
@dp.callback_query(F.data == "support")
async def support_callback(callback: CallbackQuery):
    await callback.message.edit_text("–ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –∞–¥–º–∏–Ω –≤–∞–º –æ—Ç–≤–µ—Ç–∏—Ç.")
    await bot.send_message(ADMIN_ID, f"üì© –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{callback.from_user.username or callback.from_user.id} –æ—Ç–∫—Ä—ã–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
    await callback.answer()

# –ê–≤—Ç–æ–æ—Ç–º–µ–Ω–∞ —Å–¥–µ–ª–∫–∏ —á–µ—Ä–µ–∑ 1 —á–∞—Å
@dp.message()
async def check_timeout(message: Message, state: FSMContext):
    data = await state.get_data()
    start_time = data.get("start_time")
    if start_time and datetime.now() - start_time > timedelta(hours=1):
        await message.answer("‚è∞ –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è.")
        await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
@dp.errors()
async def handle_errors(event, exception):
    return True  # –ø–æ–¥–∞–≤–ª—è–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏

# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
