from aiogram import Bot, Dispatcher, F, Router, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import CommandStart
import asyncio
from datetime import datetime, timedelta

TOKEN = "7807213915:AAGGA7EDq-e_8uUnpKfg4ZhUe-KfJfXKvUY"
ADMIN_ID = 7620745738

bot = Bot(token=7807213915:AAGGA7EDq-e_8uUnpKfg4ZhUe-KfJfXKvUY)
dp = Dispatcher()
router = Router()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ (user_id: datetime —Å–æ–∑–¥–∞–Ω–∏—è)
active_deals = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu(is_admin=False):
    buttons = [
        [InlineKeyboardButton(text="ü§ù –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É", callback_data="create_deal")],
        [InlineKeyboardButton(text="üéÅ –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑", url="https://link_to_prize")],
        [InlineKeyboardButton(text="üí¨ –û—Ç–∑—ã–≤—ã", url="https://t.me/raindrop_reviews")],
        [InlineKeyboardButton(text="üõ° –ì–¥–µ —è –≥–∞—Ä–∞–Ω—Ç?", callback_data="guarantee_chats")],
        [InlineKeyboardButton(text="üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
        [InlineKeyboardButton(text="üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data="profile")],
    ]
    if is_admin:
        buttons.append([InlineKeyboardButton(text="üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)

@router.message(CommandStart())
async def start_handler(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.", 
                         reply_markup=main_menu(is_admin=(message.from_user.id == ADMIN_ID)))

@router.callback_query(F.data == "create_deal")
async def create_deal_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    active_deals[user_id] = datetime.now()
    cancel_button = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É", callback_data="cancel_deal")]
    ])
    await callback.message.edit_text(
        "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Å–¥–µ–ª–∫—É.\n–£–∫–∞–∂–∏—Ç–µ username –≤—Ç–æ—Ä–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞, —Ç–æ–≤–∞—Ä—ã, —Ü–µ–Ω—É –∏ —É—Å–ª–æ–≤–∏—è.",
        reply_markup=cancel_button
    )
    await notify_admin(f"–ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ –æ—Ç @{callback.from_user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username'}!")

@router.callback_query(F.data == "cancel_deal")
async def cancel_deal_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    active_deals.pop(user_id, None)
    await callback.message.edit_text("–°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=main_menu(is_admin=(user_id == ADMIN_ID)))

@router.callback_query(F.data == "guarantee_chats")
async def guarantee_chats_callback(callback: CallbackQuery):
    text = "üìå –ì–¥–µ —è –≥–∞—Ä–∞–Ω—Ç?\n\n" \
           "–ß–∞—Ç 1: https://t.me/naytixa\n" \
           "–ß–∞—Ç 2: https://t.me/ChatFischS\n" \
           "–ß–∞—Ç 3: https://t.me/fischtradeschat"
    await callback.message.edit_text(text)

@router.callback_query(F.data == "support")
async def support_callback(callback: CallbackQuery):
    await callback.message.edit_text("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
    await notify_admin(f"üõ† –û–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç @{callback.from_user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–µ–∑ username'}")

@router.callback_query(F.data == "profile")
async def profile_callback(callback: CallbackQuery):
    await callback.message.edit_text(f"üë§ –í–∞—à ID: {callback.from_user.id}\nüì¶ –ö–æ–ª-–≤–æ —Å–¥–µ–ª–æ–∫: 0")

@router.callback_query(F.data == "admin")
async def admin_callback(callback: CallbackQuery):
    if callback.from_user.id != ADMIN_ID:
        return
    text = (
        "üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n\n"
        "1. –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n"
        "2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "3. –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ\n"
        "4. –ò–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é\n"
        "5. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"
    )
    await callback.message.edit_text(text)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–¥–µ–ª–æ–∫ –Ω–∞ –∞–≤—Ç–æ–æ—Ç–º–µ–Ω—É
async def deal_timeout_checker():
    while True:
        now = datetime.now()
        expired_users = [user for user, time in active_deals.items() if now - time > timedelta(hours=1)]
        for user in expired_users:
            try:
                await bot.send_message(user, "‚è≥ –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–∑-–∑–∞ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è.")
            except:
                pass
            active_deals.pop(user, None)
        await asyncio.sleep(60)

async def notify_admin(text: str):
    try:
        await bot.send_message(ADMIN_ID, text)
    except:
        pass

dp.include_router(router)

async def main():
    asyncio.create_task(deal_timeout_checker())
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
